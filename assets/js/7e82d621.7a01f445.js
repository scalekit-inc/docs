"use strict";(self.webpackChunkscalekit_docs=self.webpackChunkscalekit_docs||[]).push([[8208],{2257:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var i=t(4848),o=t(8453);const r={},a=void 0,s={type:"mdx",permalink:"/apis/embeds/tag/Authentication/get/oauth/authorize",source:"@site/src/pages/apis/embeds/tag/Authentication/get/oauth/authorize.md",description:"User will be redirected to the appropriate Identity provider's login page based on either organizationid, or connectionid or domain.",frontMatter:{},unlisted:!1},c={},l=[];function u(e){const n={code:"code",p:"p",pre:"pre",...(0,o.R)(),...e.components},{CodeWithHeader:t,TabItem:r,Tabs:a}=n;return t||h("CodeWithHeader",!0),r||h("TabItem",!0),a||h("Tabs",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t,{method:"get",endpoint:"/oauth/authorize",children:(0,i.jsxs)(a,{groupId:"tech-stack",querystring:!0,children:[(0,i.jsx)(r,{value:"curl",label:"cURL",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:"showLineNumbers",children:"curl --request GET \\\n  --url 'https://$env_url/oauth/authorize\n  ?client_id=skc_12344\n  &redirect_uri=https%3A%2F%2Fmysaasapp.com%2Fredirect_uri\n  &response_type=code\n  &state=hf68uyjh2189iuhj56789\n  &scope=openid email profile'\n"})})}),(0,i.jsx)(r,{value:"nodejs",label:"Node.js",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",metastring:"showLineNumbers",children:"import { ScalekitClient } from '@scalekit-sdk/node';\n\n// scalekit client takes care of authentication behind the scenes.\nconst scalekit = new ScalekitClient(\n  SCALEKIT_ENVIRONMENT_URL,\n  SCALEKIT_CLIENT_ID,\n  SCALEKIT_CLIENT_SECRET\n);\n\nconst options = {};\n// use one of the below strategies below to determine how to log the user in.\n\n// If you would like to authenticate the user via connection_id\noptions.connectionId = 'conn_1242242';\n\n// If you would like to authenticate the user via organization_id\noptions.organizationId = 'org_12442';\n\n// If you would like to authenticate the user via their email address\n// Domain portion of the user's email address is used to detect the appropriate enterprise SSO connection\noptions.loginHint = '<user@example.com>';\n\n// Authorization URL with connection ID parameter\nconst authorizationURL = scalekit.getAuthorizationUrl(redirectUri, {\n  connectionId: 'conn_1242242',\n});\n\n// redirect the user to the authorization url\n"})})}),(0,i.jsx)(r,{value:"py",label:"Python",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:"showLineNumbers",children:"from scalekit import ScalekitClient, AuthorizationUrlOptions, CodeAuthenticationOptions\n\nscalekit_client = ScalekitClient(\n  <SCALEKIT_ENVIRONMENT_URL>,\n  <SCALEKIT_CLIENT_ID>,\n  <SCALEKIT_CLIENT_SECRET>\n)\n\n\noptions = AuthorizationUrlOptions()\n# use one of the below strategies below to determine how to log the user in.\n\n# If you would like to authenticate the user via connection_id\noptions.connection_id = 'conn_1242242'\n\n# If you would like to authenticate the user via organization_id\noptions.organization_id = 'org_12442'\n\n# If you would like to authenticate the user via their email address\n# Domain portion of the user's email address is used to detect the appropriate enterprise SSO connection\noptions.login_hint = '<user@example.com>'\n\nauthorization_url = scalekit_client.get_authorization_url(\n  redirect_uri=<redirect_uri>,\n  options=options\n)\n\n# redirect the user to the authorization url\n"})})}),(0,i.jsx)(r,{value:"golang",label:"Go",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",metastring:"showLineNumbers",children:'import (\n  "github.com/scalekit/scalekit-sdk-go"\n)\n\nfunc main() {\n  sc := scalekit.NewScalekitClient(\n    SCALEKIT_ENVIRONMENT_URL,\n    SCALEKIT_CLIENT_ID,\n    SCALEKIT_CLIENT_SECRET\n  )\n\n  options := scalekit.AuthorizationUrlOptions{}\n  // use one of the strategies below to determine how to log the user in.\n\n  // If you would like to authenticate the user via connection_id\n  options.ConnectionId = "conn_1242242"\n\n  // If you would like to authenticate the user via organization_id\n  options.OrganizationId = "org_12442"\n\n  // If you would like to authenticate the user via their email address\n  // Domain portion of the user\'s email address is used to detect the appropriate enterprise SSO connection\n  options.LoginHint = "<user@example.com>"\n\n  authorizationURL := sc.GetAuthorizationUrl(\n    redirectUrl,\n    options,\n  )\n\n  // redirect the user to the authorization url\n}\n\n'})})}),(0,i.jsx)(r,{value:"java",label:"Java",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",metastring:"showLineNumbers",children:'package com.scalekit;\n\nimport com.scalekit.ScalekitClient;\nimport com.scalekit.internal.http.AuthorizationUrlOptions;\n\npublic class Main {\n  public static void main(\nString[] args) {\n    ScalekitClient scalekitClient =\n      new ScalekitClient(\n        "SCALEKIT_ENVIRONMENT_URL",\n        "SCALEKIT_CLIENT_ID",\n        "SCALEKIT_CLIENT_SECRET"\n      );\n    AuthorizationUrlOptions options =\n      new AuthorizationUrlOptions();\n    // Option 1: Authorization URL with the organization ID\n    options.setOrganizationId(\n      "org_13388706786312310");\n    // Option 2: Authorization URL with the connection ID\n    options.setConnectionId(\n      "con_13388706786312310");\n    // Option 3: Authorization URL with login hint\n    options.setLoginHint(\n      "<user@example.com>");\n    try {\n      String url = scalekitClient\n        .authentication()\n        .getAuthorizationUrl(\n          redirectUrl, options)\n        .toString();\n    } catch (Exception e) {\n      System.out.println(e\n      .getMessage());\n    }\n  }\n}\n'})})})]})}),"\n",(0,i.jsx)(t,{title:"Response",children:(0,i.jsx)(n.p,{children:"User will be redirected to the appropriate Identity provider's login page based on either organization_id, or connection_id or domain."})})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}function h(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>s});var i=t(6540);const o={},r=i.createContext(o);function a(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);