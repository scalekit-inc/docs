"use strict";(self.webpackChunkscalekit_docs=self.webpackChunkscalekit_docs||[]).push([[2408],{9680:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>d});var i=t(4848),r=t(8453),s=t(5312);const o={displayed_sidebar:"homeSidebar",description:"Step-by-step guide to implement Single Sign-on in your application using Scalekit's APIs"},a="Getting Started with Single Sign-on",c={id:"sso/quickstart",title:"Getting Started with Single Sign-on",description:"Step-by-step guide to implement Single Sign-on in your application using Scalekit's APIs",source:"@site/docs/sso/quickstart.mdx",sourceDirName:"sso",slug:"/sso/quickstart",permalink:"/sso/quickstart",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{displayed_sidebar:"homeSidebar",description:"Step-by-step guide to implement Single Sign-on in your application using Scalekit's APIs"},sidebar:"homeSidebar",previous:{title:"Learn SSO Basics",permalink:"/sso/overview"},next:{title:"Admin Portal",permalink:"/sso/quickstart-admin-portal"}},l={},d=[{value:"1. Environment Setup",id:"1-environment-setup",level:2},{value:"Install the Scalekit SDK",id:"install-the-scalekit-sdk",level:3},...s.RM,{value:"Set up API credentials",id:"set-up-api-credentials",level:3},{value:"Get Your Credentials",id:"get-your-credentials",level:4},{value:"Store Credentials Securely",id:"store-credentials-securely",level:4},{value:"2. Authorize the Users",id:"2-authorize-the-users",level:2},{value:"3. Fetch User Details",id:"3-fetch-user-details",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components},{SimpleCode:o,Subtitle:a,TabItem:c,Tabs:l}=n;return o||p("SimpleCode",!0),a||p("Subtitle",!0),c||p("TabItem",!0),l||p("Tabs",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"getting-started-with-single-sign-on",children:"Getting Started with Single Sign-on"}),"\n",(0,i.jsx)(a,{children:(0,i.jsx)(n.p,{children:"Integrate with dozens of identity providers via SAML or OIDC"})}),"\n",(0,i.jsx)(n.p,{children:"Single Sign-On (SSO) enhances B2B SaaS application's security and offers a smooth user experience. Scalekit is an authentication platform that enables developers to implement enterprise features like SSO with just a few lines of code. Scalekit abstracts the complexities associated with SAML, OIDC and offers prebuilt integrations with all major identity providers like Okta, Microsoft Entra ID, Jumpcloud, Onelogin."}),"\n",(0,i.jsx)(n.p,{children:"This quickstart guide will show you how to implement SSO using Scalekit."}),"\n",(0,i.jsx)("figure",{children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.img,{alt:"How Scalekit\nworks",src:t(5707).A+"",width:"5776",height:"1924"}),"\n",(0,i.jsx)("figcaption",{children:"Scalekit offers turnkey SSO for B2B SaaS applications"})]})}),"\n",(0,i.jsx)(n.h2,{id:"1-environment-setup",children:"1. Environment Setup"}),"\n",(0,i.jsx)(n.p,{children:"Before diving in, make sure you have:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Access to your Scalekit account and API credentials"}),"\n",(0,i.jsx)(n.li,{children:"Your app's codebase for implementing and testing changes"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"install-the-scalekit-sdk",children:"Install the Scalekit SDK"}),"\n",(0,i.jsx)(n.p,{children:"Scalekit offers language-specific SDKs for fast SSO integration. Use the installation instructions below for your technology stack."}),"\n",(0,i.jsx)(s.Ay,{}),"\n",(0,i.jsx)(n.h3,{id:"set-up-api-credentials",children:"Set up API credentials"}),"\n",(0,i.jsx)(n.p,{children:"Secure your Scalekit API communication by setting up environment variables. You'll need three key pieces of information from your Scalekit Dashboard:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Environment URL"}),": The base URL for API calls. Each environment (dev, staging, prod) has a unique URL."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Client ID"}),": Your app's unique identifier for Scalekit communications."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Client Secret"}),": A private key to authenticate your API requests. For security purposes, this is generated only when you request using the Scalekit Dashboard."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"get-your-credentials",children:"Get Your Credentials"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Log into your Scalekit Dashboard."}),"\n",(0,i.jsx)(n.li,{children:'Select the "Development" environment.'}),"\n",(0,i.jsx)(n.li,{children:'Click on "API Config" to view your credentials.'}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"store-credentials-securely",children:"Store Credentials Securely"}),"\n",(0,i.jsxs)(n.p,{children:["Never hardcode secrets in your app. Use environment variables instead. Here's how to set them in a ",(0,i.jsx)(n.code,{children:".env"})," file:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",metastring:'title=".env"',children:"SCALEKIT_ENVIRONMENT_URL = 'https://b2b-app-dev.scalekit.com';\nSCALEKIT_CLIENT_ID = '<COPY_CLIENT_ID_SCALEKIT_DASHBOARD>';\nSCALEKIT_CLIENT_SECRET = '<COPY_SECRET_SCALEKIT_DASHBOARD>';\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Never commit your ",(0,i.jsx)(o,{children:".env "})," file to version control."]}),"\n",(0,i.jsxs)(n.li,{children:["Rotate your ",(0,i.jsx)(o,{children:"secret "}),"regularly. See the ",(0,i.jsx)(n.a,{href:"/sso/guides/key-concepts/manage-client-secrets",children:"best practices for managing secrets"}),"."]}),"\n"]})}),"\n",(0,i.jsx)(n.p,{children:"Now you're ready to start integrating SSO into your app! Next, we'll cover how to use the SDK to authenticate users."}),"\n",(0,i.jsx)(n.h2,{id:"2-authorize-the-users",children:"2. Authorize the Users"}),"\n",(0,i.jsx)(n.p,{children:"To start login with Single Sign-On (SSO), your app must redirect users to the Scalekit Authorization URL with appropriate social connection provider details."}),"\n",(0,i.jsx)(n.p,{children:"Construct the Authorization URL using the following query parameters:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Parameter"}),(0,i.jsx)(n.th,{children:"Details"}),(0,i.jsx)(n.th,{}),(0,i.jsx)(n.th,{}),(0,i.jsx)(n.th,{})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(o,{className:"text--semibold",children:"redirect_uri"})}),(0,i.jsxs)(n.td,{children:["URI endpoint on your server to complete user login via SSO. ",(0,i.jsx)("br",{}),"Example: ",(0,i.jsxs)(o,{children:["https:",(0,i.jsx)("span",{}),"//your-saas-app.com/auth/callback"]})," After the user is logged into the social provider, Scalekit redirects the user to this URI with one time authorization ",(0,i.jsx)(n.code,{children:"code"}),". In the later section, we will explain how to use this unique ",(0,i.jsx)(n.code,{children:"code"})," to fetch user details"]}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(o,{className:"text--semibold",children:"client_id"})}),(0,i.jsx)(n.td,{children:"Your app's unique Scalekit identifier which is mandatory for all requests. This uniquely identifies both your app and the environment (staging, prod)."}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:["Any one of the SSO connection identifiers ",(0,i.jsx)("br",{}),"- ",(0,i.jsx)(o,{children:"organization_id"}),(0,i.jsx)("br",{}),"- ",(0,i.jsx)(o,{children:"connection_id"}),(0,i.jsx)("br",{}),"- ",(0,i.jsx)(o,{children:"login_hint"}),(0,i.jsx)("br",{}),"- ",(0,i.jsx)(o,{children:"domain"})]}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(o,{className:"text--semibold",children:"organization_id"}),": Informs Scalekit which organization's Single Sign-on to use to authenticate the user with. For e.g., ",(0,i.jsx)(n.code,{children:"org_124234234"}),(0,i.jsx)("br",{}),"Note: If there are multiple active SSO connections configured for an organization, we will pick the first SSO connection to authenticate the user with. ",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),(0,i.jsx)(o,{className:"text--semibold",children:"connection_id"}),": Informs Scalekit which specific Single Sign-on connection to use to authenticate the user with 's Single Sign-on to use. For e.g., ",(0,i.jsx)(n.code,{children:"conn_124234234"})," ",(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),(0,i.jsx)(o,{className:"text--semibold",children:"domain"}),": Informs Scalekit which Single Sign-on connection to use that is configured with the domain. For e.g., ",(0,i.jsx)(n.code,{children:"acmecorp.com"}),(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),(0,i.jsx)(o,{className:"text--semibold",children:"login_hint"}),": Informs Scalekit which Single Sign-on connection to use that is configured for that domain portion of the email address. For e.g., ",(0,i.jsx)(n.code,{children:"john@acmecorp.com"})," ",(0,i.jsx)("br",{})]}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]})]})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",metastring:'title="Example Authorization URL"',children:"https://auth.scalekit.com/authorize?\n  client_id=skc_122056050118122349527&\n  redirect_uri=https://yourapp.com/auth/callback&\n  organization_id=org_12434341\n"})}),"\n",(0,i.jsxs)(n.p,{children:["See our ",(0,i.jsx)(n.a,{href:"/sso/guides/key-concepts/authorization-url",children:"Authorization URL Parameters Guide"})," for a full list of accepted parameters."]}),"\n",(0,i.jsx)(n.p,{children:"Next, construct your Authorization URL with these parameters and redirect users to this URL when they try to log in."}),"\n",(0,i.jsxs)(l,{groupId:"tech-stack",queryString:!0,children:[(0,i.jsx)(c,{value:"nodejs",label:"Node.js",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",metastring:"showLineNumbers",children:"import { Scalekit } from '@scalekit-sdk/node';\n\n// initialize the SDK client\nconst scalekit = new Scalekit(\n  SCALEKIT_ENVIRONMENT_URL,\n  SCALEKIT_CLIENT_ID,\n  SCALEKIT_CLIENT_SECRET\n);\n\n// Option 1: Authorization URL with the organization ID\nconst authorizationURL = scalekit.getAuthorizationUrl(redirectUri, {\n  organizationId: 'org_12442',\n  state: state, // optional\n});\n\n// Option 2: Authorization URL with login hint\nconst authorizationURL = scalekit.getAuthorizationUrl(redirectUri, {\n  loginHint: 'user@example.com',\n});\n\n// Option 3: Authorization URL with the connection ID\nconst authorizationURL = scalekit.getAuthorizationUrl(redirectUri, {\n  connectionId: 'conn_1242242',\n});\n\n// TODO: redirect the user to this authorizationURL\n"})})}),(0,i.jsx)(c,{value:"py",label:"Python",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:"showLineNumbers",children:"from scalekit import ScalekitClient, AuthorizationUrlOptions, CodeAuthenticationOptions\n\n# initialize the SDK client\nscalekit_client = ScalekitClient(\n  <SCALEKIT_ENVIRONMENT_URL>,\n  <SCALEKIT_CLIENT_ID>,\n  <SCALEKIT_CLIENT_SECRET>\n)\n\noptions = AuthorizationUrlOptions()\n\n\n# Option 1: Authorization URL with the organization ID\noptions.organization_id = 'org_12442'\n\n# Option 2: Authorization URL with login hint\noptions.login_hint = '<user@example.com>'\n\n# Option 3: Authorization URL with the connection ID\noptions.connection_id = 'conn_1242242'\n\nauthorization_url = scalekit_client.get_authorization_url(\n  redirect_uri=<redirect_uri>,\n  options=options\n)\n"})})}),(0,i.jsx)(c,{value:"golang",label:"Go",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",metastring:"showLineNumbers",children:'\nimport (\n  "github.com/scalekit/scalekit-sdk-go"\n)\n\nfunc main() {\n  // initialize the SDK client\n  sc := scalekit.NewScalekitClient(\n    SCALEKIT_ENVIRONMENT_URL,\n    SCALEKIT_CLIENT_ID,\n    SCALEKIT_CLIENT_SECRET\n  )\n\n  options := scalekit.AuthorizationUrlOptions{}\n  // use one of the three strategies below to determine how to log the user in.\n\n  // Option 1: Authorization URL with the organization ID\n  options.OrganizationId = "org_12442"\n\n  // Option 2: Authorization URL with the connection ID\n  options.ConnectionId = "conn_1242242"\n\n  // Option 3: Authorization URL with Login Hint\n  // User\'s email domain detects the correct enterprise SSO connection.\n  options.LoginHint = "<user@example.com>"\n\n  authorizationURL := sc.GetAuthorizationUrl(\n    redirectUrl,\n    options,\n  )\n  // next step is to redirect the user to this authorizationURL\n}\n'})})}),(0,i.jsx)(c,{value:"java",label:"Java",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",metastring:"showLineNumbers",children:'package com.scalekit;\nimport com.scalekit.ScalekitClient;\nimport com.scalekit.internal.http.AuthorizationUrlOptions;\n\npublic class Main {\n  public static void main(String[] args) {\n    // initialize the SDK client\n    ScalekitClient scalekitClient = new ScalekitClient(\n      "SCALEKIT_ENVIRONMENT_URL",\n      "SCALEKIT_CLIENT_ID",\n      "SCALEKIT_CLIENT_SECRET"\n    );\n    AuthorizationUrlOptions options = new AuthorizationUrlOptions();\n    // Option 1: Authorization URL with the organization ID\n    options.setOrganizationId("org_13388706786312310");\n    // Option 2: Authorization URL with the connection ID\n    options.setConnectionId("con_13388706786312310");\n    // Option 3: Authorization URL with Login Hint\n    options.setLoginHint("<user@example.com>");\n    try {\n      String url = scalekitClient.authentication().getAuthorizationUrl(\n        redirectUrl, options).toString();\n    } catch (Exception e) {\n      System.out.println(e.getMessage());\n    }\n  }\n}\n'})})})]}),"\n",(0,i.jsxs)(n.p,{children:["Finally, handle the callback at your ",(0,i.jsx)(o,{children:"redirect_uri"})," to complete the Authentication. Understand user authorization procedure through a NextJS example for ",(0,i.jsx)(n.a,{href:"/sso/guides/setup-sso/build-login-page",children:"adding SSO to the Login Page"})]}),"\n",(0,i.jsx)(n.h2,{id:"3-fetch-user-details",children:"3. Fetch User Details"}),"\n",(0,i.jsxs)(n.p,{children:["After a successful SSO, Scalekit redirects the user to your ",(0,i.jsx)(o,{children:"redirect_uri"})," with a unique ",(0,i.jsx)(o,{children:"code"})," in the browser. Exchange the ",(0,i.jsx)(o,{children:"code"})," for user profile details (on the serverside)."]}),"\n",(0,i.jsxs)(n.p,{children:["Here's how to turn that ",(0,i.jsx)(o,{children:"code"})," into user data:"]}),"\n",(0,i.jsxs)(l,{groupId:"tech-stack",queryString:!0,children:[(0,i.jsx)(c,{value:"nodejs",label:"Node.js",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",metastring:"showLineNumbers",children:"const {\n  code,\n  error,\n  error_description,\n  idp_initiated_login,\n  connection_id,\n  relay_state,\n} = req.query;\n\nif (error) {\n  // handle errors\n}\n\n// If it is an idp initiated login\nif (idp_initiated_login && idp_initiated_login === 'success') {\n  const authorizationURL = scalekit.getAuthorizationUrl(redirectUri, {\n    connectionId: connection_id,\n    ...(relay_state && { state: relay_state }), // optional: pass relay state\n  });\n\n  // Next:redirect the user to this authorizationURL\n}\n\nconst res = await scalekit.authenticateWithCode({\n  code: code,\n  redirectUri: redirectUri,\n});\n\n// res.user has the authenticated user's details\nconst userEmail = res.user.email;\n\n// Next step: create a session for this user and allow access\n"})})}),(0,i.jsx)(c,{value:"py",label:"Python",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",metastring:"showLineNumbers",children:"from scalekit import ScalekitClient, AuthorizationUrlOptions, CodeAuthenticationOptions\n\nscalekit_client = ScalekitClient(<SCALEKIT_ENVIRONMENT_URL>, <SCALEKIT_CLIENT_ID>, <SCALEKIT_CLIENT_SECRET>)\n\n# Handle the oauth redirect_url\n# fetch code and error_description from request parameters.\ncode = request.args.get('code')\nerror = request.args.get('error')\nerror_description = request.args.get('error_description')\nidp_initiated_login = request.args.get('idp_initiated_login')\nconnection_id = request.args.get('connection_id')\nrelay_state = request.args.get('relay_state')\n\nif error:\n    raise Exception(error_description)\n\nresult = scalekit_client.authenticate_with_code(<code>, <redirect_uri>)\n# result.user has the authenticated user's details\nuser_email = result.user.email\n\n# create a session and redirect the user to your dashboard\n"})})}),(0,i.jsx)(c,{value:"golang",label:"Go",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",metastring:"showLineNumbers",children:'\nimport (\n  "github.com/scalekit/scalekit-sdk-go"\n)\n\nfunc main() {\n  sc := scalekit.NewScalekitClient(\n    SCALEKIT_ENVIRONMENT_URL,\n    SCALEKIT_CLIENT_ID,\n    SCALEKIT_CLIENT_SECRET\n  )\n\n  // Handle the oauth redirect_url\n  // fetch code and error_description from request parameters.\n  code := r.URL.Query().Get("code")\n  error := r.URL.Query().Get("error")\n  errorDescription := r.URL.Query().Get("error_description")\n  idpInitiatedLogin := r.URL.Query().Get("idp_initiated_login")\n  connectionID := r.URL.Query().Get("connection_id")\n  relayState := r.URL.Query().Get("relay_state")\n\n  if error != "" {\n    // handle errors\n  }\n\n  if idpInitiatedLogin != "" && idpInitiatedLogin == "success" {\n    // handle idp initiated login\n    authorizationURL := sc.GetAuthorizationUrl(redirectUrl, {\n      ConnectionId: connectionID,\n      RelayState: relayState,\n    })\n    // next step is to redirect the user to this authorizationURL\n  }\n\n  // if there are no errors and if this is not an IdP initiated SSO, then authenticate with the code\n  res, err := sc.AuthenticateWithCode(code, redirectUrl)\n  if err != nil {\n    // handle errors\n  }\n\n  // res.User has the authenticated user\'s details\n  userEmail := res.User.Email\n\n  // create a session and redirect the user to your dashboard\n}\n'})})}),(0,i.jsx)(c,{value:"java",label:"Java",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'@GetMapping("/callback")\npublic String callbackHandler(\n  @RequestParam(required = false) String code,\n  @RequestParam(required = false, name =\n  "error_description") String errorDescription,\n  HttpServletResponse response) throws IOException {\n  if (errorDescription != null) {\n    response.sendError(HttpStatus.BAD_REQUEST.value(), errorDescription);\n    return null;\n  }\n  if (code == null || code.isEmpty()) {\n    response.sendError(HttpStatus.BAD_REQUEST.value(), "code not found");\n    return null;\n  }\n  try {\n    AuthenticationResponse res = scalekit.authentication()\n      .authenticateWithCode(\n        code,\n        redirectUrl,\n        new AuthenticationOptions()\n      );\n    String userEmail = res.getIdTokenClaims().getEmail();\n    System.out.println(userEmail);\n  } catch (Exception e) {\n    System.out.println(e.getMessage());\n    return null;\n  }\n  return null;\n}\n'})})})]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}function p(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},5312:(e,n,t)=>{t.d(n,{Ay:()=>a,RM:()=>s});var i=t(4848),r=t(8453);const s=[];function o(e){const n={code:"code",pre:"pre",...(0,r.R)(),...e.components},{TabItem:t,Tabs:s}=n;return t||c("TabItem",!0),s||c("Tabs",!0),(0,i.jsxs)(s,{groupId:"tech-stack",queryString:!0,children:[(0,i.jsx)(t,{value:"nodejs",label:"Node.js",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"npm install @scalekit-sdk/node\n"})})}),(0,i.jsx)(t,{value:"py",label:"Python",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"pip install scalekit-sdk-python\n"})})}),(0,i.jsx)(t,{value:"golang",label:"Go",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:"go get https://www.github.com/scalekit-inc/go-sdk\n"})})}),(0,i.jsxs)(t,{value:"java",label:"Java",children:[(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-groovy",children:'/* Gradle users - add the following to your dependencies in build file */\nimplementation "com.scalekit:scalekit-sdk-java:1.0.0"\n'})}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:"\x3c!-- Maven users - add the following to your `pom.xml` (Maven) --\x3e\n<dependency>\n    <groupId>com.scalekit</groupId>\n    <artifactId>scalekit-sdk-java</artifactId>\n    <version>1.0.0</version>\n</dependency>\n"})})]})]})}function a(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}function c(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},5707:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/how-scalekit-connects-2d96085d85f28cabcbe8b91fcc604bb9.png"},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var i=t(6540);const r={},s=i.createContext(r);function o(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);