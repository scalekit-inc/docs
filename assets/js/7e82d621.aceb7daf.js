"use strict";(self.webpackChunkscalekit_docs=self.webpackChunkscalekit_docs||[]).push([[8208],{2257:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var i=t(4848),o=t(8453);const r={},a=void 0,s={type:"mdx",permalink:"/apis/embeds/tag/Authentication/get/oauth/authorize",source:"@site/src/pages/apis/embeds/tag/Authentication/get/oauth/authorize.md",description:"User will be redirected to the appropriate Identity provider's login page based on either organizationid, or connectionid or domain.",frontMatter:{},unlisted:!1},c={},l=[];function u(n){const e={code:"code",p:"p",pre:"pre",...(0,o.R)(),...n.components},{CodeWithHeader:t,TabItem:r,Tabs:a}=e;return t||h("CodeWithHeader",!0),r||h("TabItem",!0),a||h("Tabs",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t,{method:"get",endpoint:"/oauth/authorize",children:(0,i.jsxs)(a,{groupId:"tech-stack",querystring:!0,children:[(0,i.jsx)(r,{value:"curl",label:"cURL",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",metastring:"showLineNumbers",children:"curl --request GET \\\n  --url 'https://$env_url/oauth/authorize\n  ?client_id=skc_12344\n  &redirect_uri=https%3A%2F%2Fmysaasapp.com%2Fredirect_uri\n  &response_type=code\n  &state=hf68uyjh2189iuhj56789\n  &scope=openid profile'\n"})})}),(0,i.jsx)(r,{value:"nodejs",label:"Node.js",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",metastring:"showLineNumbers",children:"import { ScalekitClient } from \"@scalekit-sdk/node\";\n\n// scalekit client takes care of authentication behind the scenes.\nconst scalekit = new ScalekitClient(\n  SCALEKIT_ENVIRONMENT_URL,\n  SCALEKIT_CLIENT_ID,\n  SCALEKIT_CLIENT_SECRET\n);\n\n// Authorization URL with organization ID parameter and optional state parameter\n const authorizationURL = scalekit.getAuthorizationUrl(redirectUri, {\n   organizationId: 'org_12442',\n   state: state\n })\n\n // Authorization URL with optional login hint parameter\n const authorizationURL = scalekit.getAuthorizationUrl(redirectUri, {\n   loginHint: 'user@example.com',\n   organizationId: 'org_12442'\n })\n\n// Authorization URL with connection ID parameter\n const authorizationURL = scalekit.getAuthorizationUrl(redirectUri, {\n   connectionId: 'conn_1242242',\n })\n"})})}),(0,i.jsx)(r,{value:"py",label:"Python",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",metastring:"showLineNumbers",children:"from scalekit import ScalekitClient, AuthorizationUrlOptions, CodeAuthenticationOptions\n\nscalekit_client = ScalekitClient(\n  <SCALEKIT_ENVIRONMENT_URL>, \n  <SCALEKIT_CLIENT_ID>, \n  <SCALEKIT_CLIENT_SECRET>\n)\n\n\noptions = AuthorizationUrlOptions()\n\n# use one of the three strategies below to determine how to log the user in.\n\n# If you would like to authenticate the user via connection_id\noptions.connection_id = 'conn_1242242'\n\n# If you would like to authenticate the user via organization_id\noptions.organization_id = 'org_12442'\n\n# If you would like to authenticate the user via their email address \n# Domain portion of the user's email address is used to detect the appropriate enterprise SSO connection\noptions.login_hint = '<user@example.com>'\n\nauthorization_url = scalekit_client.get_authorization_url(\n  redirect_uri=<redirect_uri>, \n  options=options\n)\n\n# TODO redirect the user to the authorization url\n"})})}),(0,i.jsx)(r,{value:"golang",label:"Go",children:(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-go",children:'import (\n  "github.com/scalekit/scalekit-sdk-go"\n)\n\nfunc main() {\n  sc := scalekit.NewScalekitClient(\n    SCALEKIT_ENVIRONMENT_URL,\n    SCALEKIT_CLIENT_ID,\n    SCALEKIT_CLIENT_SECRET\n  )\n\n  // Authorization URL with organization ID parameter and optional state parameter\n  authorizationURL, err := sc.GetAuthorizationUrl(\n    redirectUri,\n    scalekit.AuthorizationUrlOptions{\n      OrganizationId: "org_12442",\n      State: someState,\n    }\n  )\n\n  // Authorization URL with optional login hint parameter\n  authorizationURL, err := sc.GetAuthorizationUrl(\n    redirectUri,\n    scalekit.AuthorizationUrlOptions{\n      LoginHint: "user@example.com",\n      OrganizationId: "org_12442",\n    }\n  )\n\n  // Authorization URL with connection ID parameter\n  authorizationURL, err := sc.GetAuthorizationUrl(\n    redirectUri,\n    scalekit.AuthorizationUrlOptions{\n      ConnectionId: "conn_1242242",\n    }\n  )\n}\n\n'})})})]})}),"\n",(0,i.jsx)(t,{title:"Response",children:(0,i.jsx)(e.p,{children:"User will be redirected to the appropriate Identity provider's login page based on either organization_id, or connection_id or domain."})})]})}function d(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(u,{...n})}):u(n)}function h(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}},8453:(n,e,t)=>{t.d(e,{R:()=>a,x:()=>s});var i=t(6540);const o={},r=i.createContext(o);function a(n){const e=i.useContext(r);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:a(n.components),i.createElement(r.Provider,{value:e},n.children)}}}]);