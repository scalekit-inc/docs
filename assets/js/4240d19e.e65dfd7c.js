"use strict";(self.webpackChunkscalekit_docs=self.webpackChunkscalekit_docs||[]).push([[3534],{66137:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>a,contentTitle:()=>o,default:()=>u,frontMatter:()=>c,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"sso/guides/key-concepts/redirect-uri","title":"Scalekit redirect URI guide | Configure authentication endpoints","description":"Learn how to configure and validate redirect URIs in Scalekit for secure SSO flows, including development and production environment requirements.","source":"@site/docs/sso/guides/key-concepts/3-redirect-uri.mdx","sourceDirName":"sso/guides/key-concepts","slug":"/sso/guides/key-concepts/redirect-uri","permalink":"/sso/guides/key-concepts/redirect-uri","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"slug":"redirect-uri","title":"Scalekit redirect URI guide | Configure authentication endpoints","description":"Learn how to configure and validate redirect URIs in Scalekit for secure SSO flows, including development and production environment requirements.","keywords":["Redirect URI","Scalekit","Authentication","Identity provider","SAML SSO","OAuth 2.0","Wildcard support","Security","URI validation"]},"sidebar":"ssoSidebar","previous":{"title":"Understand authorization URL","permalink":"/sso/guides/key-concepts/authorization-url"},"next":{"title":"Manage ID token claims","permalink":"/sso/guides/key-concepts/idtoken-claims"}}');var s=r(74848),n=r(28453),d=r(72169);const c={slug:"redirect-uri",title:"Scalekit redirect URI guide | Configure authentication endpoints",description:"Learn how to configure and validate redirect URIs in Scalekit for secure SSO flows, including development and production environment requirements.",keywords:["Redirect URI","Scalekit","Authentication","Identity provider","SAML SSO","OAuth 2.0","Wildcard support","Security","URI validation"]},o="Redirect URI",a={},l=[{value:"Validation rules",id:"validation-rules",level:2},{value:"Wildcard character (<SimpleCode>*</SimpleCode>) in redirect URIs",id:"wildcard-character--in-redirect-uris",level:2}];function h(e){const t={a:"a",admonition:"admonition",h1:"h1",h2:"h2",header:"header",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.R)(),...e.components},{Link:r,SimpleCode:i}=t;return r||x("Link",!0),i||x("SimpleCode",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"redirect-uri",children:"Redirect URI"})}),"\n",(0,s.jsx)(t.p,{children:"A redirect URI is an endpoint where Scalekit redirects users post-authentication with the identity provider (IdP). In the Scalekit dashboard, you can configure up to 5 redirect URIs per environment."}),"\n",(0,s.jsx)(t.p,{children:"Since redirect URIs can be manipulated by unauthorized parties, Scalekit requires pre-registration of all redirect URIs used in login flows. Registration can be done in the Scalekit dashboard."}),"\n",(0,s.jsx)(t.admonition,{type:"info",children:(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"IdP-initiated SAML SSO flow"}),": Scalekit uses your configured default redirect URI to redirect users. ",(0,s.jsx)(t.a,{href:"/sso/guides/setup-sso/implement-idp-initiated-sso",children:"Learn more about handling IdP-initiated SSO flows"}),"."]})}),"\n",(0,s.jsx)(t.h2,{id:"validation-rules",children:"Validation rules"}),"\n",(0,s.jsx)(t.p,{children:"Redirect URIs that are configured in the Scalekit dashboard must adhere to specific validation rules for security:"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Validation rule"}),(0,s.jsx)(t.th,{children:"Development environment"}),(0,s.jsx)(t.th,{children:"Production environment"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Schemes supported"}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(d.naH,{})," ",(0,s.jsx)(i,{children:"http"}),(0,s.jsx)("br",{})," ",(0,s.jsx)(d.naH,{})," ",(0,s.jsx)(i,{children:"https "})]}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(d.naH,{})," ",(0,s.jsx)(i,{children:"https"})]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"localhost"}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(d.naH,{})," Allowed"]}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(d.AZ3,{})," Not allowed"]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Wildcard support (*)"}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(d.naH,{})," Allowed",(0,s.jsx)("br",{}),(0,s.jsx)("br",{}),"See ",(0,s.jsx)(t.a,{href:"/sso/guides/key-concepts/redirect-uri",children:"below"})," for full details about wildcard character support"]}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(d.AZ3,{})," Not allowed"]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Max URI length"}),(0,s.jsx)(t.td,{children:"256 characters"}),(0,s.jsx)(t.td,{children:"256 characters"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsxs)(t.td,{children:["Query parameters ",(0,s.jsx)("br",{})," ",(0,s.jsxs)(i,{children:["https:",(0,s.jsx)("span",{}),"//your-domain.com/callback?query=value"]})]}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(d.AZ3,{})," Not allowed"]}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(d.AZ3,{})," Not allowed"]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsxs)(t.td,{children:["Fragment component ",(0,s.jsx)("br",{})," ",(0,s.jsxs)(i,{children:["https:",(0,s.jsx)("span",{}),"//your-domain.com/callback#fragment=value"]})]}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(d.AZ3,{})," Not allowed"]}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(d.AZ3,{})," Not allowed"]})]})]})]}),"\n",(0,s.jsxs)(t.h2,{id:"wildcard-character--in-redirect-uris",children:["Wildcard character (",(0,s.jsx)(i,{children:"*"}),") in redirect URIs"]}),"\n",(0,s.jsxs)(t.p,{children:["According to the OAuth 2.0 specification (",(0,s.jsx)(r,{href:"https://tools.ietf.org/html/rfc6749#section-3.1.2",children:"section 3.1.2 of RFC 6749"}),"), a redirection URI must be an absolute URI. But, to make development and testing easier - this restriction is slightly relaxed in the development environments."]}),"\n",(0,s.jsx)(t.p,{children:"For development, wildcards can simplify testing. However, they must follow these rules:"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Validation rule"}),(0,s.jsx)(t.th,{children:"Example"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Wildcard characters are not allowed as a root-level domain"}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(d.AZ3,{})," ",(0,s.jsx)(i,{children:"https://*.com"}),(0,s.jsx)("br",{}),(0,s.jsx)(d.naH,{})," ",(0,s.jsx)(i,{children:"https://*.acmecorp.com"}),(0,s.jsx)("br",{}),(0,s.jsx)(d.naH,{})," ",(0,s.jsxs)(i,{children:["https",(0,s.jsx)("span",{}),"://auth-*.acmecorp.com"]})]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"A redirect URI can have only one wildcard character"}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(d.AZ3,{})," ",(0,s.jsx)(i,{children:"https://*.*.acmecorp.com"}),(0,s.jsx)("br",{}),(0,s.jsx)(d.naH,{})," ",(0,s.jsx)(i,{children:"https://*.acmecorp.com"})]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Wildcard character must be located in a subdomain within the hostname component"}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(d.AZ3,{})," ",(0,s.jsxs)(i,{children:["https",(0,s.jsx)("span",{}),"://acmecorp.*.com"]}),(0,s.jsx)("br",{}),(0,s.jsx)(d.naH,{})," ",(0,s.jsx)(i,{children:"https://*.acmecorp.com"})]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Wildcard must be part of the subdomain that is farthest from the hostname component"}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(d.AZ3,{})," ",(0,s.jsxs)(i,{children:["https",(0,s.jsx)("span",{}),"://auth.*.acmecorp.com"]}),(0,s.jsx)("br",{}),(0,s.jsx)(d.naH,{})," ",(0,s.jsx)(i,{children:"https://*.auth.acmecorp.com"})]})]})]})]})]})}function u(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}function x(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);