"use strict";(self.webpackChunkscalekit_docs=self.webpackChunkscalekit_docs||[]).push([[5922],{1034:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"integrations/social-connections/google","title":"Scalekit Google Sign-In Guide | Configure Social Authentication","description":"Learn how to integrate Google Sign-In with Scalekit, enabling secure social authentication for your users with step-by-step OAuth configuration instructions.","source":"@site/docs/integrations/social-connections/google.mdx","sourceDirName":"integrations/social-connections","slug":"/integrations/social-connections/google","permalink":"/integrations/social-connections/google","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"pagination_next":null,"pagination_prev":null,"displayed_sidebar":"integrationsSidebar","title":"Scalekit Google Sign-In Guide | Configure Social Authentication","description":"Learn how to integrate Google Sign-In with Scalekit, enabling secure social authentication for your users with step-by-step OAuth configuration instructions.","keywords":["Google Sign-In","Social Login","OAuth 2.0","Authentication","User Login","Google OAuth","Social Authentication","Integration Guide"]},"sidebar":"integrationsSidebar"}');var o=t(4848),s=t(8453);const l={pagination_next:null,pagination_prev:null,displayed_sidebar:"integrationsSidebar",title:"Scalekit Google Sign-In Guide | Configure Social Authentication",description:"Learn how to integrate Google Sign-In with Scalekit, enabling secure social authentication for your users with step-by-step OAuth configuration instructions.",keywords:["Google Sign-In","Social Login","OAuth 2.0","Authentication","User Login","Google OAuth","Social Authentication","Integration Guide"]},r="Google as your sign in option",c={},a=[{value:"Overview",id:"overview",level:2},{value:"Connect Google with Scalekit",id:"connect-google-with-scalekit",level:2},{value:"1. Test using Scalekit credentials",id:"1-test-using-scalekit-credentials",level:2},{value:"2. Connect Google with Scalekit using your own credentials",id:"2-connect-google-with-scalekit-using-your-own-credentials",level:2},{value:"Configure OAuth settings",id:"configure-oauth-settings",level:3},{value:"Get Google OAuth Client Credentials",id:"get-google-oauth-client-credentials",level:3},{value:"Choose the user experience for login prompt",id:"choose-the-user-experience-for-login-prompt",level:3},{value:"Test the Connection",id:"test-the-connection",level:2},{value:"Next steps",id:"next-steps",level:2}];function h(e){const n={a:"a",admonition:"admonition",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components},{SimpleCode:i,Subtitle:l}=n;return i||g("SimpleCode",!0),l||g("Subtitle",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"google-as-your-sign-in-option",children:"Google as your sign in option"})}),"\n",(0,o.jsx)(l,{children:"Easily add Google sign in to your app with Scalekit"}),"\n",(0,o.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,o.jsx)(n.p,{children:'Scalekit enables apps to easily let users sign in using Google as their social connector. This guide\nwalks you through the process of setting up the connection between Scalekit and Google, and using\nthe Scalekit SDK to add "Sign in with Google" to your application.'}),"\n",(0,o.jsxs)("figure",{children:[(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"Overview Diagram",src:t(7180).A+"",width:"5776",height:"1924"})}),(0,o.jsx)("figcaption",{children:(0,o.jsx)(n.p,{children:'A diagram showing "Your Application" connecting to "Scalekit" via OpenID Connect, which links to\nGoogle using OAuth 2.0.'})})]}),"\n",(0,o.jsx)(n.p,{children:"By the end of this guide, you will be able to:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Test Google sign-in without setting up Google OAuth credentials (dev only)"}),"\n",(0,o.jsx)(n.li,{children:"Set up an OAuth 2.0 connection between Scalekit and Google"}),"\n",(0,o.jsx)(n.li,{children:"Implement 'Sign in with Google' in your application using the Scalekit SDK."}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"connect-google-with-scalekit",children:"Connect Google with Scalekit"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Navigate to Social Login settings"})}),"\n",(0,o.jsx)(n.p,{children:"Open your Scalekit dashboard and navigate to Social Login under the Authentication section."}),"\n",(0,o.jsxs)("figure",{children:[(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"Scalekit dashboard showcasing social login setup with various platform integration\noptions.",src:t(5640).A+"",width:"2622",height:"908"})}),(0,o.jsx)("figcaption",{children:(0,o.jsx)(n.p,{children:"Scalekit dashboard showcasing social login setup with various platform integration options."})})]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Add a new Google connection"})}),"\n",(0,o.jsx)(n.p,{children:'Click the "+ Add Connection" button and select Google from the list of available options.'}),"\n",(0,o.jsx)(n.h2,{id:"1-test-using-scalekit-credentials",children:"1. Test using Scalekit credentials"}),"\n",(0,o.jsx)(n.p,{children:"For faster development and testing, Scalekit provides pre-configured Google OAuth credentials, allowing you to test the authentication flow without setting up your own Google OAuth client."}),"\n",(0,o.jsx)(n.p,{children:"This is particularly useful when you want to quickly validate Google sign-in functionality in your app without dealing with OAuth setup. It also helps if you\u2019re still in the early stages of development and don\u2019t have Google credentials yet, or if you need to test the behavior before setting up a production-ready connection."}),"\n",(0,o.jsxs)(n.p,{children:["Now to be able to do so, under OAuth Configuration, select Use Scalekit credentials and save the changes. Once done, you can now directly test the setup by clicking Test Connection.\nUnder OAuth Configuration, select ",(0,o.jsx)(n.strong,{children:"Use Scalekit credentials"})," and ",(0,o.jsx)(n.strong,{children:"save"})," the changes. Once done, you can now directly test the setup by clicking ",(0,o.jsx)(n.strong,{children:"Test Connection."})]}),"\n",(0,o.jsx)("figure",{children:(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.img,{alt:"Add social login connections: Google, Microsoft, GitHub, GitLab,\nSalesforce.",src:t(2110).A+"",width:"2940",height:"1656"}),"\n",(0,o.jsx)("figcaption",{children:"Use Scalekit credentials to test connection"})]})}),"\n",(0,o.jsx)(n.h2,{id:"2-connect-google-with-scalekit-using-your-own-credentials",children:"2. Connect Google with Scalekit using your own credentials"}),"\n",(0,o.jsx)(n.h3,{id:"configure-oauth-settings",children:"Configure OAuth settings"}),"\n",(0,o.jsx)(n.p,{children:"The OAuth Configuration details page helps you set up the connection:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Note the ",(0,o.jsx)(n.strong,{children:"Redirect URI"})," provided for your app. You'll use this URL to register with Google."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Client ID"})," and ",(0,o.jsx)(n.strong,{children:"Client Secret"})," are generated by Google when you register an OAuth App. They\nenable Scalekit to authenticate your app and establish trust with Google."]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"get-google-oauth-client-credentials",children:"Get Google OAuth Client Credentials"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Open the ",(0,o.jsx)(n.a,{href:"https://console.cloud.google.com/",children:"Google Cloud Platform Console"}),". From the projects\nlist, select an existing project or create a new one."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Navigate to the\n",(0,o.jsx)(n.a,{href:"https://console.cloud.google.com/auth/overview",children:"Google Auth Platform's overview page"}),"."]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Click ",(0,o.jsx)(n.strong,{children:"Get Started"})," and provide details such as app information, audience, and contact\ninformation. Complete the process by clicking ",(0,o.jsx)(n.strong,{children:"Create"}),"."]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:['On the "Overview" page, click the ',(0,o.jsx)(n.strong,{children:"Create OAuth Client"})," button to start setting up your app's\nOAuth client."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Choose the appropriate application type (e.g., web application) from the dropdown menu."}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Copy the redirect URI from your Google Social Login configuration and paste it into the\n",(0,o.jsx)(n.strong,{children:"Authorized Redirect URIs"})," field. The URI should follow this format (for development\nenvironment): ",(0,o.jsx)(i,{children:" https://[YOUR_ENV_ID].scalekit.dev "}),"."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Save and Retrieve Credentials"}),": Click ",(0,o.jsx)(n.strong,{children:"Save"})," to finalize the setup. You will be redirected\nto a list of Google OAuth Clients. Select the newly created client and copy the ",(0,o.jsx)(n.strong,{children:"Client ID"}),"\nand ",(0,o.jsx)(n.strong,{children:"Client Secret"})," from the additional information section."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Enter Credentials in Social Login Configuration"}),": Paste the copied client credentials into\ntheir respective fields on your Google Social Login page."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Click ",(0,o.jsx)(n.strong,{children:"Test Connection"})," to simulate and verify the Google Sign-In flow."]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.admonition,{type:"info",children:(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Explore options like branding, audience, clients, and data access to customize your OAuth consent\nscreen for your application's needs."}),"\n",(0,o.jsx)(n.li,{children:"Ensure your app's verification status with Google is complete before enabling social login\nfeatures for users to ensure trustworthiness."}),"\n"]})}),"\n",(0,o.jsxs)(n.p,{children:["For more details, refer to ",(0,o.jsx)(n.a,{href:"https://support.google.com/cloud/answer/6158849",children:"Google's OAuth Guide"}),"."]}),"\n",(0,o.jsxs)("figure",{children:[(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"Configure OAuth\nsettings",src:t(7201).A+"",width:"2892",height:"1537"})}),(0,o.jsx)("figcaption",{children:(0,o.jsx)(n.p,{children:"Google OAuth configuration in Scalekit, showing redirect URI, client credentials, and scopes for\nsocial login setup."})})]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Use the Redirect URI from Scalekit as the Callback URL in Google's setup"}),"\n",(0,o.jsx)(n.li,{children:"Copy the generated Client ID and Client Secret into the Scalekit Dashboard"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:'After completing the setup, click "Save Changes" in Scalekit for the changes to take effect.'}),"\n",(0,o.jsxs)("figure",{children:[(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"Google OAuth configuration for social login, showing redirect URI, client ID, and scopes for\nauthentication.",src:t(2449).A+"",width:"2818",height:"1594"})}),(0,o.jsx)("figcaption",{children:(0,o.jsx)(n.p,{children:"Google OAuth configuration for social login, showing redirect URI, client ID, and scopes for\nauthentication."})})]}),"\n",(0,o.jsx)(n.h3,{id:"choose-the-user-experience-for-login-prompt",children:"Choose the user experience for login prompt"}),"\n",(0,o.jsx)(n.p,{children:"Scalekit offers flexibility to control how and when users are prompted for reauthentication, consent, or account selection. Below are the available options for customizing user sign-in behavior:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Auto Sign-in (default)"}),":\nAutomatically completes the login process without showing any confirmation prompts. This is ideal for single Google account users who are already logged in and have previously provided consent."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Consent"}),":\nThe authorization server prompts the user for consent before returning information to the client."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Select Account"}),":\nThe authorization server prompts the user to select a user account. This allows a user who has multiple accounts at the authorization server to select amongst the multiple accounts that they may have current sessions for."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"None"}),":\nThe authorization server does not display any authentication or user consent screens; it will return an error if the user is not already authenticated and has not pre-configured consent for the requested scopes. You can use none to check for existing authentication and/or consent."]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"test-the-connection",children:"Test the Connection"}),"\n",(0,o.jsx)(n.p,{children:'Click the "Test Connection" button in Scalekit. You will be redirected to the Google Consent screen\nto authorize access. A summary table will show the information that will be sent to your app.'}),"\n",(0,o.jsx)("figure",{children:(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.img,{alt:"Test connection\nsuccess",src:t(8145).A+"",width:"2922",height:"1812"}),"\n",(0,o.jsx)("figcaption",{children:"Test connection success, showing the consent screen and summary table."})]})}),"\n",(0,o.jsx)(n.h2,{id:"next-steps",children:"Next steps"}),"\n",(0,o.jsxs)(n.p,{children:["Once the connection is set up, refer to our ",(0,o.jsx)(n.a,{href:"/sso/social-login",children:"Quickstart guide"})," to learn how to\nintegrate this connection into your app using the Scalekit SDK."]})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}function g(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},5640:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/1-navigate-to-social-logins-9e10cb4180800caeb2ec155513cdee74.png"},2110:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/2-1-test-scalekit-credentials-b62dea89873369d179ed546b30675d7f.png"},7201:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/3-google-oauth-config-eff6333e47c87a3b61643669448cbcf5.png"},2449:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/4-after-oauth-config-49857ba21a0134d07482d32a3516aaf7.png"},8145:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/5-successful-test-connection-d8fef6b3723decf7247bb58042a41aab.png"},7180:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/scalekit_social-a3766a0389271c05739c72d7875dd680.png"},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>r});var i=t(6540);const o={},s=i.createContext(o);function l(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);